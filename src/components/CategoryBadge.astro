---
interface Props {
  category: string;
  small?: boolean;
}

const { category, small = false } = Astro.props;

// Get a deterministic color based on the category name
function getCategoryColor(category: string): string {
  const colors = [
    'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',
    'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',
    'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200',
    'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200',
    'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200',
    'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',
    'bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-200',
  ];
  
  // Generate a simple hash from the category name
  let hash = 0;
  for (let i = 0; i < category.length; i++) {
    hash = category.charCodeAt(i) + ((hash << 5) - hash);
  }
  
  // Use the hash to pick a color
  const index = Math.abs(hash) % colors.length;
  return colors[index];
}

const colorClass = getCategoryColor(category);
---

<a 
  href={`/categories/${category.toLowerCase()}`} 
  class={`inline-block rounded-full transition-transform hover:scale-105 ${colorClass} ${small ? 'text-xs px-2 py-0.5' : 'text-sm px-3 py-1'}`}
>
  {category}
</a>