---
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description = '个人博客分享网站', image = '/images/default-og.png' } = Astro.props;
---

<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />
    <title>{title}</title>
    <ViewTransitions />
    <script is:inline define:vars={{ isClient: typeof document !== 'undefined' }}>
      // 检查系统主题偏好
      const getSystemTheme = () => window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      
      // 初始化主题
      const initTheme = () => {
        // 从 localStorage 获取主题，如果没有则使用系统偏好
        let theme = localStorage.getItem('theme') || getSystemTheme();
        
        // 应用主题
        applyTheme(theme);
        
        // 监听系统主题变化
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
          if (!localStorage.getItem('theme')) {
            applyTheme(e.matches ? 'dark' : 'light');
          }
        });
      };
      
      // 应用主题
      const applyTheme = (theme) => {
        document.documentElement.setAttribute('data-theme', theme);
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      };
      
      // 切换主题
      window.toggleTheme = (theme) => {
        const newTheme = theme || (document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark');
        localStorage.setItem('theme', newTheme);
        applyTheme(newTheme);
      };
      
      // 初始化
      if (typeof document !== 'undefined') {
        initTheme();
      }
    </script>
  </head>
  <body class="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 flex flex-col">
    <Header />
    <main class="flex-grow container mx-auto px-4 sm:px-6 py-8">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');
  
  html {
    font-family: 'Inter', sans-serif;
    scroll-behavior: smooth;
  }
  
  body {
    margin: 0;
    padding: 0;
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: transparent;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #d1d5db;
    border-radius: 4px;
  }
  
  .dark ::-webkit-scrollbar-thumb {
    background: #4b5563;
  }
  
  /* Transition styles */
  .fade-in {
    animation: fadeIn 0.5s ease-in;
  }
  
  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }
  
  /* Code block styles */
  pre {
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  
  .dark pre {
    background-color: #1e293b !important;
  }
  
  code {
    font-family: 'Fira Code', monospace;
  }
</style>